<%- include("../../partials/admin/header") %>

<style>
  .table thead th {
    background-color: #f8f9fa; /* Change this to your desired color */
    color: #000; /* Optional: change the text color if needed */
    text-align: left; /* Optional: change the text alignment if needed */
    padding: 10px; /* Optional: change the padding if needed */
  }


    
  .userProfileMain {
    width: 100%;
    height: 30%;
    margin: 0 auto;
    background-color: rgb(0, 0, 0);
  }

  .userProfileH1 {
    width: 100%;
    margin: 10px;
    font-family: "Baloo", cursive;
    color: white;
    font-size: 6vw;
  }

  .breadcrumbCls {
    background-color: rgb(0, 0, 0);
  }
</style>

<section>
  <div class="pb-5 text-center">
    <div class="card userProfileMain rounded">
      <h1 class="userProfileH1">Products</h1>
    </div>
  </div>
</section>



<section class="content-main">

    <div class="d-flex justify-content-end">
      <div class="p-3">

        <a href="/admin/stocks" class="btn btn-dark btn-sm rounded">Manage Stocks</a>
      </div>
      <div class="p-3">

        <a href="/admin/add-product" class="btn btn-dark btn-sm rounded">Add products</a>
      </div>
    </div>
  </div>

  <div class="card mb-4">
    <div class="card-body">
      <div class="table-responsive">
        <table class="table text-capitalize table-hover">
          <thead>
            <tr>
              <th>#</th>
              <th>Image</th>
              <th>Name</th>
              <th>Category</th>
              <th>Price</th>
              <th>Stocks</th>
              <th>Status</th>
              <th>Edit Product</th>
              <th class="text-center">Actions</th>
            </tr>
          </thead>
          <tbody>
            <% if (product && product.length > 0) { %> <% product.forEach((product, index) => { %>
            <tr>
              <td>
                <img
                  class="img-fluid img-thumbnail"
                  src="/uploads/images/<%= product.primaryImages.length > 0 ? product.primaryImages[0].name : 'default.jpg' %>"
                  width="70rem"
                  alt=""
                />
              </td>
              <td><%= product.name %></td>
              <td><%= product.category.name %></td>
              <td><%= product.price %></td>



              <td>
                <% let totalStock = 0; // Initialize total stock to 0 %> 
                
                <% product.variants.forEach(variant => { %> 
                <% totalStock += variant.stock;
                // Add stock of each variant %> <% }); %> <% if (totalStock > 0) { %>
                <span class="text text-success">In Stock (<%= totalStock %>)</span>
                <% } else { %>
                <span class="text text-danger">Out Of Stock</span>
                <% } %>
              </td>




              <td>
                <% if (product.isActive) { %>
                <span class="badge rounded-pill alert-success">Listed</span>
                <% } else { %>
                <span class="badge rounded-pill alert-danger">Unlisted</span>
                <% } %>
              </td>
              <td>
                <a href="/admin/edit-product/<%= product._id %>" class="btn btn-sm font-sm rounded btn-dark">
                  <i class="material-icons md-edit"></i> Edit
                </a>
              </td>
              <td class="text-center">
                <% if (product.isActive) { %>
                <button class="btn btn-danger btn-sm rounded" onclick="confirmAction('<%= product._id %>', 'unlist', '<%= product.name %>')">
                  <i class="material-icons"></i> Unlist
                </button>
                <% } else { %>
                <button class="btn btn-warning btn-sm rounded" onclick="confirmAction('<%= product._id %>', 'list', '<%= product.name %>')">
                  <i class="material-icons"></i> List
                </button>
                <% } %>
                
              
                
              </td>
            </tr>
            <% }) %> <% } else { %>
            <tr>
              <td colspan="9" class="text-center">No products found</td>
            </tr>
            <% } %>
          </tbody>
        </table>
      </div>
    </div>
  </div>


  <%- include('.././pagination') %>

  
</section>
<!-- content-main end// -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<script>
  const confirmAction = (productId, action, productName) => {
    let actionText, confirmButtonText;

    switch (action) {
      case "list":
        actionText = "list";
        confirmButtonText = "Yes, List it!";
        break;
      case "unlist":
        actionText = "unlist";
        confirmButtonText = "Yes, Unlist it!";
        break;
      case "delete":
        actionText = "delete";
        confirmButtonText = "Yes, Delete it!";
        break;
      default:
        return;
    }

    Swal.fire({
      title: "Are you sure?",
      text: `Do you want to ${actionText} the product: ${productName}?`,
      icon: "warning",
      showCancelButton: true,
      confirmButtonText: confirmButtonText,
      cancelButtonText: "No, cancel!",
      showConfirmButton: true, // Hide the confirm button
      reverseButtons: true,
      timer: 5000, // Auto-close after 3 seconds
      timerProgressBar: true, // Optional: Show a progress bar
    }).then((result) => {
      if (result.isConfirmed) {
        if (action === "delete") {
          deleteProduct(productId);
        } else {
          const shouldList = action === "list";
          unlistOrListProduct(productId, shouldList);
        }
      }
    });
  };

  const unlistOrListProduct = async (productId, shouldList) => {
    try {
      const response = await fetch("/admin/product/action", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ productId, shouldList }),
      });
      const result = await response.json();
      if (result.success) {
        Swal.fire({
          title: "Success!",
          text: shouldList ? "Product has been listed." : "Product has been unlisted.",
          icon: "success",
          showConfirmButton: false,
          timer: 1500,
        }).then(() => {
          location.reload();
        });
      } else {
        Swal.fire({
          title: "Error!",
          text: "Something went wrong.",
          icon: "error",
          showConfirmButton: false,

          timer: 1500,
        });
      }
    } catch (error) {
      Swal.fire({
        title: "Error!",
        text: "Something went wrong.",
        icon: "error",
        showConfirmButton: false,

        timer: 1500,
      });
    }
  };

  const deleteProduct = async (productId) => {
    try {
      const response = await fetch("/admin/product/deleteProduct", {
        method: "DELETE",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ productId }),
      });
      const result = await response.json();
      if (result.success) {
        Swal.fire({
          title: "Deleted!",
          text: "Product has been deleted.",
          icon: "success",
          showConfirmButton: false,

          timer: 1500,
        }).then(() => {
          location.reload();
        });
      } else {
        Swal.fire({
          title: "Error!",
          text: "Something went wrong.",
          icon: "error",
          showConfirmButton: false,

          timer: 1500,
        });
      }
    } catch (error) {
      Swal.fire({
        title: "Error!",
        text: "Something went wrong.",
        icon: "error",
        showConfirmButton: false,

        timer: 1500,
      });
    }
  };
</script>

<%- include("../../partials/admin/footer") %>
