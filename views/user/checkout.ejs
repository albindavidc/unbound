<%- include('../../views/partials/user/header') %>

<!-- Hero Secion // Breadcrumb // Hero Content -->
<section class="hero">
  <div class="container">
    <ol class="breadcrumb justify-content-center">
      <li class="breackcrumb-itm"><a href="shop.ejs">Home</a></li>
      <li class="breackcrumb-itm"><a href="">Cart</a></li>
      <li class="breackcrumb-itm active">Checkout</li>
    </ol>
  </div>
  <div class="hero-content pb-5 text-center">
    <h1 class="hero-heading">Checkout</h1>
  </div>
</section>


<!-- Checkout Section-->
<section class="container mt-5">
  <div class="row g-5">
    <div class="col-md-5 col-lg-4 order-md-last">
      <h4 class="bg-secondary-light text-white p-3 rounded d-flex justify-content-between align-items-center mb-3">
        <span>Your Cart</span>
        <span class="badge bg-secondary rounded-pill"><%- cartCount %></span>
      </h4>
      <ul class="list-group mb-4">
        <% cartList.forEach(item => { %>
        <li class="list-group-item d-flex justify-content-between lh-sm">
          <div>
            <h6 class="my-0 text-uppercase"><%- item.productId.name %></h6>
            <small class="text-muted">Size: <%- item.sizeId.value %></small><br>
            <small class="text-muted">Color: <%- item.colorId.name %></small><br>
            <small class="text-muted">Quantity: <%- item.quantity %></small>
          </div>
          <div class="text-end">
            <span class="text-muted">₹<%- item.price %> each</span><br>
            <strong class="text-dark">₹<%- item.itemTotal %></strong>
          </div>
        </li>
        <% }) %>
        <li class="list-group-item d-flex justify-content-between">
          <span>Grand Total (INR)</span>
          <strong>₹<span id="grandTotal"><%- totalPrice %></span></strong>
        </li>
      </ul>
    </div>
  
    <div class="col-md-7 col-lg-8">
      <h4 class="bg-secondary-light text-white p-3 rounded">Billing & Shipping Address</h4>
      <form class="needs-validation" id="orderForm" novalidate>
        <div class="my-4">
          <% if (address.length > 0) { %>
          <div class="table-responsive">
            <table class="table table-hover">
              <thead>
                <tr class="text-muted">
                  <th>Address</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                <% address.forEach((item, index) => { %>
                <tr>
                  <td>
                    <div class="d-flex align-items-center">
                      <input type="radio" class="form-check-input me-3" id="address-<%= index %>" name="address" value="<%= item._id %>" <% if (index === 0) { %> checked <% } %> required>
                      <label for="address-<%= index %>" class="form-check-label">
                        <%- item.name.toLowerCase() + ', ' + item.house_name + ', ' + item.town + ', ' + item.state + ', PIN: ' + item.zipcode + ', PH:' + item.phone %>
                      </label>
                    </div>
                  </td>
                  <td class="text-end">
                    <button type="button" class="btn btn-sm btn-outline-warning me-2" id="edit-button" data-address-id="<%- item._id %>" href="#edit-address-modal" data-bs-toggle="modal">
                      <i class="bi bi-pencil"></i>
                    </button>
                    <button type="button" class="btn btn-sm btn-outline-danger" onclick="deleteAddress('<%- item._id %>')">
                      <i class="bi bi-trash"></i>
                    </button>
                  </td>
                </tr>
                <% }) %>
              </tbody>
            </table>
          </div>
          <% } else { %>
          <div class="alert alert-info">
            No saved addresses. Please add a new address.
          </div>
          <% } %>
          <div class="text-start mt-4">
            <button type="button" class="btn btn-outline-success" data-bs-toggle="modal" href="#add-address">
              Add New Address
            </button>
          </div>
        </div>
  
        <hr class="my-4">
  
        <h4 class="bg-secondary-light text-white p-3 rounded">Payment</h4>
  
        <div class="accordion mb-5" id="paymentAccordion">
          <div class="accordion-item">
            <h2 class="accordion-header" id="headingCOD">
              <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseCOD" aria-expanded="false" aria-controls="collapseCOD">
                Pay on Delivery
              </button>
            </h2>
            <div id="collapseCOD" class="accordion-collapse collapse show" aria-labelledby="headingCOD" data-bs-parent="#paymentAccordion">
              <div class="accordion-body">
                <input type="radio" name="paymentMethod" id="payment-method-1" value="COD" class="form-check-input" <% if (isCOD) { %> checked <% } else { %> disabled <% } %> required>
                <label for="payment-method-1" class="form-check-label ms-2">
                  <strong>Pay on Delivery</strong><br>
                  <% if (!isCOD) { %>
                  <span class="text-danger">Pay on delivery is not available for orders above ₹1000.</span>
                  <% } %>
                </label>
              </div>
            </div>
          </div>
        </div>
  
        <div class="p-6">

            <button class="btn btn-primary btn-lg w-100" id="submitOrder" type="submit">Place Order</button>
        </div>
      </form>
    </div>
  </div>
</section>

  
  <!-- Add New Address Modal-->
  <form class="needs-validation modal fade" action="/checkout/add-address" method="POST" id="add-address" tabindex="-1" novalidate>
    <div class="modal-dialog modal-lg">
      <div class="modal-content p-4">
        <div class="modal-header">
          <h5 class="modal-title">Add a new address</h5>
          <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="row gx-4 gy-3">
            <div class="col-sm-6 form-group">
              <label class="form-label" for="address-fn">Full name</label>
              <input autocomplete="false" name="name" class="form-control" type="text" id="address-fn" required>
              <small></small>
            </div>
            <div class="col-sm-6 form-group">
              <label class="form-label" for="address-ph">Phone</label>
              <input autocomplete="false" name="phone" class="form-control" type="tel" id="address-ph" required>
              <small></small>
            </div>
            <div class="col-sm-6 form-group">
              <label class="form-label" for="address-house-name">House Name</label>
              <input autocomplete="false" name="house_name" class="form-control" type="text" id="address-house-name">
              <small></small>
            </div>
            <div class="col-sm-6 form-group">
              <label class="form-label" for="address-area">Area/Street</label>
              <input autocomplete="false" name="area_street" class="form-control" type="text" id="address-area">
              <small></small>
            </div>
            <div class="col-sm-6 form-group">
              <label class="form-label" for="address-locality">locality</label>
              <input autocomplete="false" name="locality" class="form-control" type="text" id="address-locality">
              <small></small>
            </div>
            <div class="col-sm-6 form-group">
              <label class="form-label" for="address-town">Town</label>
              <input autocomplete="false" name="town" class="form-control" type="text" id="address-town">
              <small></small>
            </div>
            <div class="col-sm-6 form-group">
              <label class="form-label" for="address-state">State</label>
              <select class="form-select" name="state" id="address-state">
                <option value="india">Select State</option>
                <option value="Andhra Pradesh">Andhra Pradesh</option>
                <option value="Arunachal Pradesh">Arunachal Pradesh</option>
                <option value="Assam">Assam</option>
                <option value="Bihar">Bihar</option>
                <option value="Chhattisgarh">Chhattisgarh</option>
                <option value="Goa">Goa</option>
                <option value="Gujarat">Gujarat</option>
                <option value="Haryana">Haryana</option>
                <option value="Himachal Pradesh">Himachal Pradesh</option>
                <option value="Jharkhand">Jharkhand</option>
                <option value="Karnataka">Karnataka</option>
                <option value="Kerala">Kerala</option>
                <option value="Madhya Pradesh">Madhya Pradesh</option>
                <option value="Maharashtra">Maharashtra</option>
                <option value="Manipur">Manipur</option>
                <option value="Meghalaya">Meghalaya</option>
                <option value="Mizoram">Mizoram</option>
                <option value="Nagaland">Nagaland</option>
                <option value="Odisha">Odisha</option>
                <option value="Punjab">Punjab</option>
                <option value="Rajasthan">Rajasthan</option>
                <option value="Sikkim">Sikkim</option>
                <option value="Tamil Nadu">Tamil Nadu</option>
                <option value="Telangana">Telangana</option>
                <option value="Tripura">Tripura</option>
                <option value="Uttar Pradesh">Uttar Pradesh</option>
                <option value="Uttarakhand">Uttarakhand</option>
                <option value="West Bengal">West Bengal</option>
                <option value="Andaman and Nicobar Islands">Andaman and Nicobar Islands</option>
                <option value="Chandigarh">Chandigarh</option>
                <option value="Dadra and Nagar Haveli and Daman and Diu">Dadra and Nagar Haveli and
                  Daman
                  and
                  Diu
                </option>
                <option value="Lakshadweep">Lakshadweep</option>
                <option value="Delhi">Delhi</option>
                <option value="Puducherry">Puducherry</option>
              </select>
              <small></small>
            </div>
  
            <div class="col-sm-6 form-group">
              <label class="form-label" for="address-zip">ZIP code</label>
              <input autocomplete="false" name="zipcode" class="form-control" type="number" id="address-zip" required>
              <div class="invalid-feedback">Please add your ZIP code!</div>
              <small></small>
            </div>
            <div class="col-sm-6 form-group">
              <label class="form-label" for="address-landmark">Landmark</label>
              <input autocomplete="false" name="landmark" class="form-control" type="text" id="address-landmark" required>
              <small></small>
            </div>
            <div class="col-sm-6 form-group">
              <label class="form-label" for="alternate-phone">Alternate Phone</label>
              <input autocomplete="false" name="alternate_phone" class="form-control" type="tel" id="alternate-phone" required>
              <small></small>
              <input autocomplete="false" name="customerId" type="hidden" value="<%- user._id %>" class="form-control">
            </div>
            <div class="col-sm-6 form-group">
              <p class="form-label">
                Select Address Type
              </p>
              <div class="form-check">
                <input class="form-check-input" type="radio" value="HOME" name="address_type" id="addressType1" checked>
                <small></small>
                <label class="form-check-label" for="addressType1">
                  HOME
                </label>
              </div>
              <div class="form-check">
                <input class="form-check-input" value="WORK" type="radio" name="address_type" id="addressType2">
                <small></small>
                <label class="form-check-label" for="addressType2">
                  WORK
                </label>
              </div>
            </div>
            <!-- <div class="col-12">
              <div class="form-check">
                <input class="form-check-input" type="checkbox" id="address-primary">
                <label class="form-check-label" for="address-primary">Make this address
                  primary</label>
              </div>
            </div> -->
          </div>
        </div>
        <div class="modal-footer">
          <button class="btn btn-secondary" type="button" data-bs-dismiss="modal">Close</button>
          <button class="btn btn-outline-success btn-shadow" type="submit">Add address</button>
        </div>
      </div>
    </div>
  </form>
  
  <!-- Edit Address Modal -->
  <div class="modal fade" id="edit-address-modal" tabindex="-1" aria-labelledby="editAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content p-4">
        <div class="modal-header">
          <h5 class="modal-title" id="editAddressModalLabel">Edit Address</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <form method="POST" id="edit-address-form" novalidate>
          <div class="modal-body">
            <div class="row gx-4 gy-3">
              <div class="col-sm-6 form-group">
                <label class="form-label" for="edit-address-fn">Full name</label>
                <input autocomplete="false" name="name" class="form-control" type="text" id="edit-address-fn" required>
                <small></small>
              </div>
              <div class="col-sm-6 form-group">
                <label class="form-label" for="edit-address-ph">Phone</label>
                <input autocomplete="false" name="phone" class="form-control" type="text" id="edit-address-ph" required>
                <small></small>
              </div>
              <div class="col-sm-6 form-group">
                <label class="form-label" for="edit-address-house-name">House Name</label>
                <input autocomplete="false" name="house_name" class="form-control" type="text" id="edit-address-house-name">
                <small></small>
              </div>
              <div class="col-sm-6 form-group">
                <label class="form-label" for="edit-address-area">Area/Street</label>
                <input autocomplete="false" name="area_street" class="form-control" type="text" id="edit-address-area">
                <small></small>
              </div>
              <div class="col-sm-6 form-group">
                <label class="form-label" for="edit-address-locality">Locality</label>
                <input autocomplete="false" name="locality" class="form-control" type="text" id="edit-address-locality">
                <small></small>
              </div>
              <div class="col-sm-6 form-group">
                <label class="form-label" for="edit-address-town">Town</label>
                <input autocomplete="false" name="town" class="form-control" type="text" id="edit-address-town">
                <small></small>
              </div>
              <div class="col-sm-6 form-group">
                <label class="form-label" for="edit-address-state">State</label>
                <select class="form-select" name="state" id="edit-address-state">
                  <option value="india">Select State</option>
                  <option value="Andhra Pradesh">Andhra Pradesh</option>
                  <option value="Arunachal Pradesh">Arunachal Pradesh</option>
                  <option value="Assam">Assam</option>
                  <option value="Bihar">Bihar</option>
                  <option value="Chhattisgarh">Chhattisgarh</option>
                  <option value="Goa">Goa</option>
                  <option value="Gujarat">Gujarat</option>
                  <option value="Haryana">Haryana</option>
                  <option value="Himachal Pradesh">Himachal Pradesh</option>
                  <option value="Jharkhand">Jharkhand</option>
                  <option value="Karnataka">Karnataka</option>
                  <option value="Kerala">Kerala</option>
                  <option value="Madhya Pradesh">Madhya Pradesh</option>
                  <option value="Maharashtra">Maharashtra</option>
                  <option value="Manipur">Manipur</option>
                  <option value="Meghalaya">Meghalaya</option>
                  <option value="Mizoram">Mizoram</option>
                  <option value="Nagaland">Nagaland</option>
                  <option value="Odisha">Odisha</option>
                  <option value="Punjab">Punjab</option>
                  <option value="Rajasthan">Rajasthan</option>
                  <option value="Sikkim">Sikkim</option>
                  <option value="Tamil Nadu">Tamil Nadu</option>
                  <option value="Telangana">Telangana</option>
                  <option value="Tripura">Tripura</option>
                  <option value="Uttar Pradesh">Uttar Pradesh</option>
                  <option value="Uttarakhand">Uttarakhand</option>
                  <option value="West Bengal">West Bengal</option>
                  <option value="Andaman and Nicobar Islands">Andaman and Nicobar Islands</option>
                  <option value="Chandigarh">Chandigarh</option>
                  <option value="Dadra and Nagar Haveli and Daman and Diu">Dadra and Nagar Haveli and
                    Daman
                    and
                    Diu
                  </option>
                  <option value="Lakshadweep">Lakshadweep</option>
                  <option value="Delhi">Delhi</option>
                  <option value="Puducherry">Puducherry</option>
                </select>
                <small></small>
              </div>
              <div class="col-sm-6 form-group">
                <label class="form-label" for="edit-address-zip">ZIP code</label>
                <input autocomplete="false" name="zipcode" class="form-control" type="number" id="edit-address-zip" required>
                <small></small>
              </div>
              <div class="col-sm-6 form-group">
                <label class="form-label" for="edit-address-landmark">Landmark</label>
                <input autocomplete="false" name="landmark" class="form-control" type="text" id="edit-address-landmark" required>
                <small></small>
              </div>
              <div class="col-sm-6 form-group">
                <label class="form-label" for="edit-alternate-phone">Alternate Phone</label>
                <input autocomplete="false" name="alternate_phone" class="form-control" type="text" id="edit-alternate-phone" required>
                <small></small>
              </div>
              <div class="col-sm-6 form-group">
                <p class="form-label">Address Type</p>
                <div class="form-check">
                  <input class="form-check-input" type="radio" value="HOME" name="address_type" id="edit-addressType1" checked>
                  <label class="form-check-label" for="edit-addressType1">
                    Home
                  </label>
                  <small></small>
                </div>
                <div class="form-check">
                  <input class="form-check-input" value="WORK" type="radio" name="address_type" id="edit-addressType2">
                  <label class="form-check-label" for="edit-addressType2">
                    Work
                  </label>
                  <small></small>
                </div>
              </div>
  
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-primary">Save changes</button>
          </div>
        </form>
      </div>
    </div>
  </div>

<script defer src="/public/js/user/checkout.js" ></script>

<script>
    
    const editForm = document.querySelector("#edit-address-form");

const checkEditName = () => {
  const nameEl = document.querySelector("#edit-address-fn");
  let valid = false;
  const name = nameEl.value.trim();

  if (!isRequired(name)) {
    showError(nameEl, "Full name cannot be blank.");
  } else if (!/^[a-zA-Z\s]+$/.test(name)) {
    showError(nameEl, "Full name should not contain numbers.");
  } else {
    showSuccess(nameEl);
    valid = true;
  }
  return valid;
};

const checkEditPhone = () => {
  const phoneEl = document.querySelector("#edit-address-ph");
  let valid = false;
  const phone = phoneEl.value.trim();

  if (!isRequired(phone)) {
    showError(phoneEl, "Phone number cannot be blank.");
  } else if (!isIndianPhoneNumber(phone)) {
    showError(phoneEl, "Phone number is not valid.");
  } else {
    showSuccess(phoneEl);
    valid = true;
  }
  return valid;
};

const checkEditHouseName = () => {
  const houseNameEl = document.querySelector("#edit-address-house-name");
  let valid = false;
  const houseName = houseNameEl.value.trim();

  if (!isRequired(houseName)) {
    showError(houseNameEl, "House name cannot be blank.");
  } else {
    showSuccess(houseNameEl);
    valid = true;
  }
  return valid;
};

const checkEditAreaStreet = () => {
  const areaStreetEl = document.querySelector("#edit-address-area");
  let valid = false;
  const areaStreet = areaStreetEl.value.trim();

  if (!isRequired(areaStreet)) {
    showError(areaStreetEl, "Area/Street cannot be blank.");
  } else {
    showSuccess(areaStreetEl);
    valid = true;
  }
  return valid;
};

const checkEditLocality = () => {
  const localityEl = document.querySelector("#edit-address-locality");
  let valid = false;
  const locality = localityEl.value.trim();

  if (!isRequired(locality)) {
    showError(localityEl, "Locality cannot be blank.");
  } else {
    showSuccess(localityEl);
    valid = true;
  }
  return valid;
};

const checkEditTown = () => {
  const townEl = document.querySelector("#edit-address-town");
  let valid = false;
  const town = townEl.value.trim();

  if (!isRequired(town)) {
    showError(townEl, "Town cannot be blank.");
  } else {
    showSuccess(townEl);
    valid = true;
  }
  return valid;
};

const checkEditState = () => {
  const stateEl = document.querySelector("#edit-address-state");
  let valid = false;
  const state = stateEl.value;

  if (state === "india") {
    showError(stateEl, "Please select your state.");
  } else {
    showSuccess(stateEl);
    valid = true;
  }
  return valid;
};

const checkEditZipcode = () => {
  const zipcodeEl = document.querySelector("#edit-address-zip");
  let valid = false;
  const zipcode = zipcodeEl.value;

  if (!isRequired(zipcode)) {
    showError(zipcodeEl, "ZIP code cannot be blank.");
  } else {
    showSuccess(zipcodeEl);
    valid = true;
  }
  return valid;
};

const checkEditLandmark = () => {
  const landmarkEl = document.querySelector("#edit-address-landmark");
  let valid = false;
  const landmark = landmarkEl.value.trim();

  if (!isRequired(landmark)) {
    showError(landmarkEl, "Landmark cannot be blank.");
  } else {
    showSuccess(landmarkEl);
    valid = true;
  }
  return valid;
};

const checkEditAlternatePhone = () => {
  const alternatePhoneEl = document.querySelector("#edit-alternate-phone");
  let valid = false;
  const alternatePhone = alternatePhoneEl.value.trim();

  if (!isRequired(alternatePhone)) {
    showError(alternatePhoneEl, "Alternate phone number cannot be blank.");
  } else if (!isIndianPhoneNumber(alternatePhone)) {
    showError(alternatePhoneEl, "Alternate phone number is not valid.");
  } else {
    showSuccess(alternatePhoneEl);
    valid = true;
  }
  return valid;
};

const checkEditAddressType = () => {
  const addressTypeEl = document.querySelector(
    'input[name="address_type"]:checked'
  );
  let valid = false;

  if (!addressTypeEl) {
    showError(addressTypeEl, "Please select an address type.");
  } else {
    showSuccess(addressTypeEl);
    valid = true;
  }
  return valid;
};

editForm.addEventListener("submit", function (e) {
  e.preventDefault();

  console.log(e);
  const formData = new FormData(editForm);

  // Log the form data
  for (let [key, value] of formData.entries()) {
    console.log(`${key}: ${value}`);
  }

  let isNameValid = checkEditName(),
    isPhoneValid = checkEditPhone(),
    isHouseNameValid = checkEditHouseName(),
    isAreaStreetValid = checkEditAreaStreet(),
    isLocalityValid = checkEditLocality(),
    isTownValid = checkEditTown(),
    isStateValid = checkEditState(),
    isZipcodeValid = checkEditZipcode(),
    isLandmarkValid = checkEditLandmark(),
    isAlternatePhoneValid = checkEditAlternatePhone(),
    isAddressTypeValid = checkEditAddressType();

  let isFormValid =
    isNameValid &&
    isPhoneValid &&
    isHouseNameValid &&
    isAreaStreetValid &&
    isLocalityValid &&
    isTownValid &&
    isStateValid &&
    isZipcodeValid &&
    isLandmarkValid &&
    isAlternatePhoneValid &&
    isAddressTypeValid;

  if (isFormValid) {
    editForm.submit();
  }
});



const debounce = (fn, delay = 50) => {
  let timeoutId;
  return (...args) => {
    // cancel the previous timer
    if (timeoutId) {
      clearTimeout(timeoutId);
    }
    // setup a new timer
    timeoutId = setTimeout(() => {
      fn.apply(null, args);
    }, delay);
  };
};



editForm.addEventListener(
  "input",
  debounce((e) => {
    switch (e.target.id) {
      case "edit-address-fn": // Full name
        checkEditName();
        break;
      case "edit-address-ln": // Phone
        checkEditPhone();
        break;
      case "edit-address-house-name": // House Name
        checkEditHouseName();
        break;
      case "edit-address-area": // Area/Street
        checkEditAreaStreet();
        break;
      case "edit-address-locality": // Locality
        checkEditLocality();
        break;
      case "edit-address-town": // Town
        checkEditTown();
        break;
      case "edit-address-state": // State
        checkEditState();
        break;
      case "edit-address-zip": // ZIP code
        checkEditZipcode();
        break;
      case "edit-address-landmark": // Landmark
        checkEditLandmark();
        break;
      case "edit-alternate-phone": // Alternate Phone
        checkEditAlternatePhone();
        break;
      // Assuming there's a function to check the address type, if needed
      case "edit-form-check": // Address Type
        checkAddressType();
        break;
    }
  })
);

    
    </script>

<div>
    </div>
<%- include('../../views/partials/user/footer') %>
