<%- include('../partials/user/header') %>

<style>
  .userProfileMain {
    width: 80vw;
    height: 30%;
    margin: 0 auto;
    border-radius: 0px;
    background-color: rgb(0, 0, 0);
  }
  .userProfileH1 {
    width: 50%;
    margin: auto auto;
    font-family: "Baloo", cursive;
    color: white;
    font-size: 7vw;
  }

  .order-summary,
  .shipping-info,
  .order-item {
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

  .order-summary h4,
  .items-list h5,
  .shipping-info h5 {
    border-bottom: 2px solid #000000;
    padding-bottom: 8px;
    margin-bottom: 16px;
  }

  .order-actions button {
    margin-right: 10px;
  }
</style>

<section>
  <!-- Hero-Content -->
  <div class="pb-5 text-center">
    <div class="card userProfileMain">
      <h1 class="userProfileH1">Order</h1>
    </div>
  </div>
</section>

<section>
  <div class="container mt-5">
    <div class="row justify-content-center">
      <div class="col-12 col-md-10">
        <!-- Iterate over each order -->
        <% order.forEach(singleOrder => { %>
        <!-- Check if the order ID matches the selected orderId -->
        <% if (singleOrder._id.toString() === orderId.toString()) { %>

        <!-- Order Summary -->
        <div class="order-summary mb-4 p-4 border rounded bg-light shadow">
          <h4 class="mb-3">Order Details</h4>
          <p><strong>Order Number:</strong> <%= singleOrder._id %></p>
          
          <p><strong>Order Date:</strong> <%= new Date(singleOrder.createdAt).toLocaleDateString() %></p>
          <p><strong>Total:</strong> ₹<%= singleOrder.totalPrice %></p>
        </div>

        <!-- Items List -->
        <div class="items-list mb-4">
          <h5 class="mb-3">Items in Your Order</h5>
          <% singleOrder.items.forEach((item, index) => { %>
          <div class="order-item p-3 mb-3 border rounded shadow">
            <div class="row align-items-center">
              <div class="col-md-4">
                <% let imagePath = ''; %>
                <% if (item.productId.primaryImages && item.productId.primaryImages.length > 0) { %>
                  <% imagePath = item.productId.primaryImages[0].name; %>
                <% } %>
                <img class="img-fluid rounded shadow-sm" src="/uploads/images/<%= imagePath %>" alt="<%= item.productId.name %>">
              </div>
              <div class="col-md-8">
                <p><strong>Name:</strong> <%= item.productId.name %></p>
                <p><strong>Quantity:</strong> <%= item.quantity %></p>
                <p><strong>Price:</strong> ₹<%= item.itemTotal %></p>
                <p><strong>Status:</strong>
                  <span class="badge <%= item.status === 'Delivered' ? 'badge-success' : item.status === 'Cancelled' ? 'badge-danger' : 'badge-warning' %>">
                    <%= item.status %>
                  </span>
                </p>

                <!-- Delivery & Return Dates -->
                <% if (item.status === 'Delivered') { %>
                <p><strong>Delivery Date:</strong> <%= new Date(singleOrder.createdAt).toLocaleDateString() %></p>
                <% const returnByDate = new Date(singleOrder.createdAt); returnByDate.setDate(returnByDate.getDate() + 7); %>
                <p><strong>Return By:</strong> <%= returnByDate.toLocaleDateString() %></p>
                <% } else { %>
                <p><strong>Delivery Date:</strong> --</p>
                <p><strong>Return By:</strong> --</p>
                <% } %>

                <!-- Actions -->
                <div class="order-actions mt-3 d-flex">
                  <% if (item.status === "Delivered") { %>
                  <button class="btn btn-outline-primary return-btn mr-2" data-order-id="<%= item.orderID %>" onclick="confirmAction('<%- item.orderID %>', 'return')">Return Order</button>
                  <% } else if (item.status !== "Cancelled" && item.status !== "Return") { %>
                  <button class="btn btn-outline-danger cancel-btn" data-order-id="<%= item.orderID %>" onclick="confirmAction('<%- item.orderID %>', 'cancel')">Cancel Order</button>
                  <% } %>
                </div>
              </div>
            </div>
          </div>
          <% }) %>
        </div>

        <!-- Shipping Information -->
        <div class="shipping-info mb-4 p-4 border rounded bg-light shadow">
          <h5>Shipping Information</h5>
          <p><strong>Address:</strong> <%= singleOrder.shippingAddress.address %>, <%= singleOrder.shippingAddress.city %>, <%= singleOrder.shippingAddress.zip %></p>
          <p><strong>Phone:</strong> <%= singleOrder.shippingAddress.phone %></p>
          <% if (singleOrder.trackingNumber) { %>
          <p><strong>Tracking Number:</strong> <%= singleOrder.trackingNumber %></p>
          <% } %>
        </div>

        <% } %>
        <!-- End of order ID check -->
        <% }) %>
        <!-- End of orders loop -->
      </div>
    </div>
  </div>
</section>


<script>
  const confirmAction = (orderId, action) => {
    let actionText, confirmButtonText;

    switch (action) {
      case "return":
        actionText = "return";
        confirmButtonText = "Yes, Return the Order!";
        break;
      case "cancel":
        actionText = "cancel";
        confirmButtonText = "Yes, Cancel the Order!";
        break;
      default:
        return;
    }

    Swal.fire({
      title: "Are you sure?",
      text: `Do you want to ${actionText} this order?`,
      icon: "warning",
      showCancelButton: true,
      confirmButtonText: confirmButtonText,
      cancelButtonText: "No, Keep the Order",
      reverseButtons: true,
    }).then((result) => {
      if (result.isConfirmed) {
        if (action === "return") {
          returnTheOrder(orderId);
        } else if (action === "cancel") {
          cancelTheOrder(orderId);
        }
      }
    });
  };

  const returnTheOrder = async (orderId) => {
    try {
      const response = await fetch(`/order/${orderId}`, {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ action: "return" }),
      });
      const result = await response.json();
      if (result.success) {
        Swal.fire("Returned!", "Your order has been returned.", "success").then(() => {
          location.reload();
        });
      }
    } catch (error) {
      Swal.fire("Error", "An error occurred while returning the order.", "error");
    }
  };

  const cancelTheOrder = async (orderId) => {
    try {
      const response = await fetch(`/order/${orderId}`, {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ action: "cancel" }),
      });
      const result = await response.json();
      if (result.success) {
        Swal.fire("Cancelled!", "Your order has been cancelled.", "success").then(() => {
          location.reload();
        });
      }
    } catch (error) {
      Swal.fire("Error", "An error occurred while cancelling the order.", "error");
    }
  };
</script>

<%- include('../partials/user/footer') %>
