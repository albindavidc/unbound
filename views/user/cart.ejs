<!-- cart.ejs -->

<%- include("../partials/user/header") %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
  .container {
    max-width: 1200px;
    margin: 0 auto;
  }

  .card {
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease-in-out;
  }

  .card:hover {
    transform: scale(1.02);
  }

  /* User Profile Section */
  .userProfileMain {
    width: 80%;
    height: 200px;
    margin: 20px auto;
    background: black;
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 12px;
  }

  .userProfileH1 {
    font-family: 'Baloo', cursive;
    font-size: 8vw;
    color: white;
    margin: 0;
  }

  /* Cart Header */
  .cart-header {
    background-color: #f5f5f5;
    padding: 15px 20px;
    font-weight: bold;
    border-top-left-radius: 12px;
    border-top-right-radius: 12px;
  }

  .cart-item {
    background-color: #fff;
    padding: 20px;
    margin-bottom: 20px;
    border-radius: 12px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
    transition: all 0.3s ease-in-out;
  }

  .cart-item:hover {
    transform: translateY(-5px);
  }

  /* Product Image */
  .cart-item-img {
    max-width: 80px;
    max-height: 80px;
    margin-right: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

  .cart-title {
    font-size: 16px;
  }

  .cart-title strong {
    font-size: 18px;
    color: #000000;
  }

  .text-muted {
    color: #000000 !important;
  }

  /* Buttons */
  .btn-outline-dark {
    border-color: #000000;
    color: #000000;
    background-color: transparent;
    transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out;
  }

  .btn-outline-dark:hover {
    background-color: #000000;
    color: white;
  }

  .btn-danger {
    background-color: #e74c3c;
    border: none;
    transition: background-color 0.3s ease-in-out;
  }

  .btn-danger:hover {
    background-color: #c0392b;
  }

  /* Quantity Buttons */
  .btn-items {
    height: 40px;
    width: 40px;
    font-size: 16px;
  }

  .btn-items-decrease:hover,
  .btn-items-increase:hover {
    background-color: #000000;
    color: white;
  }

  .input-items {
    max-width: 60px;
    margin: 0 10px;
  }

  /* Order Summary */
  .block {
    background-color: #fff;
    padding: 20px;
    border-radius: 12px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
  }

  .block-header {
    font-size: 18px;
    font-weight: bold;
    color: #000000;
    border-bottom: 1px solid #ddd;
    padding-bottom: 10px;
    margin-bottom: 10px;
  }

  .order-summary {
    font-size: 16px;
    font-weight: 500;
  }

  .order-summary-item {
    display: flex;
    justify-content: space-between;
    margin-bottom: 15px;
  }

  .order-summary-total {
    font-size: 22px;
    color: #000000;
    font-weight: bold;
  }

  /* Empty Cart Section */
  .container h2.h1 {
    color: #ffffff;
    font-size: 3rem;
  }

  .container h3 {
    font-size: 2rem;
  }

  .btn-primary {
    background-color: #000000;
    border-color: #000000;
    transition: background-color 0.3s ease-in-out;
  }

  .btn-primary:hover {
    background-color: #000000;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .userProfileMain {
      width: 95%;
      height: 150px;
    }

    .userProfileH1 {
      font-size: 12vw;
    }

    .cart-item-img {
      max-width: 60px;
      max-height: 60px;
    }

    .btn-items {
      height: 35px;
      width: 35px;
    }

    .input-items {
      max-width: 50px;
    }

    .order-summary-total {
      font-size: 20px;
    }
  }
</style>



<section>
  <div class="pb-5 text-center">
    <div class="card userProfileMain rounded">
      <h1 class="userProfileH1">Cart</h1>
    </div>
  </div>
</section>

<section>
  <% if (cartCount && cartCount > 0 && cartList !== 'undefined') { %>

  <!-- Shopping Cart Section-->
  <section>
    <div class="container">
      <div class="row mb-5">
        <div class="col-lg-8">
          <div class="cart">
            <div class="cart-header text-center">
              <div class="row ">
                <div class="col-md-5">Item</div>
                <div class="col-md-7 d-none d-md-block">
                  <div class="row">
                    <div class="col-md-3">Price</div>
                    <div class="col-md-4">Quantity</div>
                    <div class="col-md-3">Total</div>
                    <div class="col-md-2"></div>
                  </div>
                </div>
              </div>
            </div>
            <% cartList.forEach(item => { %>
            <div class="cart-body" id="reload1">
              <!-- Product -->
              <div class="cart-item">
                <div class="row d-flex align-items-center text-start text-md-center">
                  <div class="col-12 col-md-5">
                    <button class="btn cart-remove close mt-3 d-md-none" onclick="removeFromCart('<%- item.productId._id %>', '<%- item.variant %>')">
                      <i class="bi bi-x-lg text-danger"></i>
                    </button>
                    <div class="d-flex align-items-center">
                      <a href="/shop/product/<%- item.productId._id %>">
                        <img
                          class="cart-item-img"
                          src="/uploads/images/<%= item.productId.primaryImages[0].name ? item.productId.primaryImages[0].name : item.productId.secondaryImages[0].name %>"
                          alt="..."
                        />
                      </a>
                      <div class="cart-title text-start">
                        <a class="text-uppercase text-dark" href="/user/product-list/<%- item.productId._id %>">
                          <strong><%= item.productId.name %></strong>
                        </a>
                        <br />
                        <span class="text-muted text-sm">Size: <%- item.sizeId.value %></span><br />
                        <span class="text-muted text-sm">Colour: <span class="text-capitalize"><%- item.colorId.name %></span></span>
                        <br />
                        <span class="text-muted text-sm">Customized: <span><%= item.customized === true ? "Yes" : "No" %></span></span>
                      </div>
                    </div>
                  </div>
                  <div class="col-12 col-md-7 mt-4 mt-md-0">
                    <div class="row align-items-center">
                      <div class="col-md-3">
                        <div class="row">
                          <div class="col-6 d-md-none text-muted">Price per item</div>
                          <div class="col-6 col-md-12 text-end text-md-center">
                            <% if (item.productId.bundleQuantity <= item.quantity) { %> ₹ <%= item.productId.bundlePrice %> <% } else { %> ₹ <%=
                            item.productId.sellingPrice %> <% } %>
                            <p style="text-decoration: line-through">₹<%- item.productId.actualPrice %></p>
                          </div>
                        </div>
                      </div>
                      <div class="col-md-4">
                        <div class="row align-items-center">
                          <div class="d-md-none col-7 col-sm-9 text-muted">Quantity</div>
                          <div class="col-5 col-sm-3 col-md-12">
                            <div class="d-flex align-items-center">
                              <button
                                onclick="decreaseCartQuantity('<%- item.productId._id %>', '<%- item.variantId._id %>')"
                                class="btn btn-outline-dark btn-items btn-items-decrease col-3"
                              >
                                -
                              </button>
                              <input
                                id="quantityInput-<%-item.productId._id%>-<%-item.variantId._id%>"
                                min="1"
                                name="quantity"
                                class="form-control text-center border-0 border-md input-items alerted quantityWarning"
                                type="text"
                                value="<%= item.quantity %>"
                              />
                              <button
                                onclick="increaseCartQuantity('<%- item.productId._id %>', '<%- item.variantId._id %>')"
                                class="btn btn-outline-dark btn-items btn-items-increase col-3"
                              >
                                +
                              </button>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="col-md-3">
                        <div class="row">
                          <div class="col-6 d-md-none text-muted">Total price</div>
                          <div
                            class="col-6 col-md-12 text-end text-md-center item-total-cart"
                            id="itemTotal-<%- item.productId._id %>-<%- item.variant %>"
                          >
                            ₹<%= item.itemTotal %>
                          </div>
                        </div>
                      </div>
                      <div class="col-2 d-none d-md-block text-center">
                        <button
                          onclick="confirmAction('<%- item.productId._id %>', '<%- item.variantId._id %>', 'delete', '<%- item.productId.name %>')"
                          class="btn btn-danger cart-remove"
                        >
                          <i class="delete bi bi-trash"></i>
                        </button>
                      </div>
                    </div>
                  </div>
                </div>

                <!-- Individual Cart Warning -->
                <% if (!item.quantity) { %>
                <div class="alert alert-warning cartWarning mt-3" id="cartWarning">
                  <strong>Warning!</strong> The product "<%- item.productId.name %>" is out of stock.
                </div>
                <% } %>
              </div>
            </div>
            <% }) %>
          </div>
          <div class="my-5 d-flex justify-content-between flex-column flex-lg-row">
            <a class="btn btn-link text-muted" href="/shop">
              <i class="bi bi-chevron-left"></i>
              Continue Shopping
            </a>
            <a class="btn btn-dark" href="/checkout" id="proceedButton">
              Proceed to checkout
              <i class="bi bi-chevron-right"></i>
            </a>
          </div>
        </div>
        <div class="col-lg-4" id="reload2">
          <div class="block mb-5">
            <div class="block-header">
              <h6 class="text-uppercase mb-0">Order Summary</h6>
            </div>
            <div class="block-body bg-light pt-1">
              <p class="text-sm">Shipping and additional costs are calculated based on values you have entered.</p>
              <ul class="order-summary mb-0 list-unstyled">
                <li class="order-summary-item"><span>Order Subtotal </span><span id="cartTotal">₹<%= payable %></span></li>
                <li class="order-summary-item">
                  <% if (payable < 1000) { %>
                  <span>Shipping and handling <span class="text-muted" id="shipping_text"></span></span>
                  <span id="shipping_fee">₹ <%= shipmentFee %></span>
                  <% } else { %>
                  <span>Shipping and handling <span class="text-muted" id="shipping_text">(free)</span></span>
                  <span style="text-decoration-line: line-through" id="shipping_fee">₹ <%= shipmentFee %></span>
                  <% } %>
                </li>
                <li class="order-summary-item border-0">
                  <span>Total</span>
                  <strong id="grandTotal" class="order-summary-total">₹<%= totalPrices %></strong>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
    <% } else { %>
    <!-- If cart is empty -->
    <div class="container my-5 mb-6">
      <div class="col my-5 text-center">
        <h2 class="h1">Cart is empty...</h2>
        <h3 class="my-5">
          <a href="/user/product-list">
            <button class="btn btn-lg btn-primary">Shop Now</button>
          </a>
        </h3>
      </div>
    </div>
    <% } %>
  </section>

  <%- include("../partials/user/footer") %>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const quantityInputs = document.querySelectorAll(".quantityWarning");

      quantityInputs.forEach((input) => {
        const [_, productId, variantId] = input.id.split("-");

        if (parseFloat(input.value) <= 0) {
          document.getElementById("proceedButton").classList = "btn btn-dark disabled";
        }
      });
    });

    const confirmAction = (productId, variantId, action, productName) => {
      let actionText, confirmButtonText;

      switch (action) {
        case "delete":
          actionText = "delete";
          confirmButtonText = "Yes, Delete it!";
          break;
        default:
          return;
      }

      Swal.fire({
        title: "Are you sure ?",
        text: `Do you want to ${actionText} the product: ${productName}`,
        icon: "warning",
        showCancelButton: true,
        cancelButtonText: "No, cancel",
        showConfirmButton: true,
        confirmButtonText: confirmButtonText,
        reverseButtons: true,
        timer: 5000,
        timerProgressBar: true,
      }).then((result) => {
        if (result.isConfirmed) {
          if (action === "delete") {
            removeFromCart(productId, variantId);
          }
        }
      });
    };

    const removeFromCart = async (productId, variantId) => {
      try {
        variantId = variantId.trim();

        const response = await fetch(`/cart/remove/${productId}/${variantId}`, {
          method: "DELETE",
          headers: {
            "Content-Type": "application/json",
          },
        });

        const result = await response.json();
        if (result.success) {
          Swal.fire({
            title: "Deleted!",
            text: "Product has been deleted.",
            icon: "success",
            showConfirmButton: true,
          }).then(() => {
            location.reload();
          });
        } else {
          Swal.fire({
            title: "Error",
            text: "Something went wrong",
            icon: "error",
            showConfirmButton: flase,
            timer: 1500,
          });
        }
      } catch {
        Swal.fire({
          title: "Error",
          text: "There is an error in the server side",
          icon: "error",
          showConfirmButton: true,
        }).then(() => {
          location.reload();
        });
      }
    };

    // Udate the quantity of the cart items
    function updateCartQuantity(productId, variantId, incrementOrDecrement) {
      const operation = incrementOrDecrement ? "increment" : "decrement";

      const quantityInput = document.getElementById(`quantityInput-${productId}-${variantId}`);
      let currentQuantity = parseInt(quantityInput.value);

      // Check for decrement and minimum quantity
      if (!incrementOrDecrement && currentQuantity <= 1) {
        Swal.fire({
          icon: "error",
          title: "Minimum Quantity",
          text: "You must order at least one item of this product.",
          showConfirmButton: true,
        }).then(() => {
          location.reload();
        });
        return;
      }

      fetch(`/cart/${productId}/${variantId}/${operation}`, {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ operation }),
      })
        .then((response) => response.json())

        .then((data) => {
          if (parseFloat(quantityInput.value) > parseFloat(data.stock)) {
            quantityInput.value = data.stock;
          }

          if (!data.success) {
            Swal.fire({
              icon: "error",
              title: "Error",
              text: data.message,
              showConfirmButton: true,
            });
            return;
          }

          quantityInput.value = data.cart.quantity;

          const totalStock = data.stock;

          console.log(totalStock);

          // Check if the new quantity exceeds the available stock (again)
          if (quantityInput.value > totalStock) {
            Swal.fire({
              icon: "error",
              title: "Limited Stock",
              text: `This product has only ${totalStock} items left.`,
              showConfirmButton: true,
            });
            return;
          }

          // Update product subtotal
          const subtotalElement = document.querySelectorAll(".item-total-cart");
          subtotalElement.forEach((item, index) => {
            const cartItem = data.carts.items[index];
            console.log(cartItem, "this is the cart item");
            if (cartItem) {
              item.textContent = `₹${cartItem.itemTotal}`;
            }
          });

          // Update grand total (or other cart totals if applicable)
          const cartTotalElement = document.getElementById("cartTotal");
          cartTotalElement.textContent = `₹${parseFloat(data.carts.totalPrice)}`;

          const shipping_text = document.getElementById("shipping_text");
          const shipping_fee = document.getElementById("shipping_fee");
          shipping_fee.textContent = `₹${parseFloat(data.carts.shipmentFee)}`;
          const totalPriceElement = document.getElementById("grandTotal");

          if (parseFloat(data.carts.totalPrice) > 1000) {
            totalPriceElement.textContent = `₹${parseFloat(data.carts.totalPrice)}`;
            shipping_text.textContent = "(free)";
            shipping_fee.style.textDecoration = "line-through";
          } else {
            shipping_text.textContent = "";
            shipping_fee.style.textDecoration = "";
            totalPriceElement.textContent = `₹${parseFloat(data.carts.totalPrice + 50)}`;
          }
        })
        .catch((error) => {
          console.error("Error updating cart:", error);
          Swal.fire({
            icon: "error",
            title: "Update Failed",
            text: "There was an error updating your cart. Please try again.",
            showConfirmButton: true,
          });
        });
    }

    function increaseCartQuantity(productId, variantId) {
      updateCartQuantity(productId, variantId, true);
    }

    function decreaseCartQuantity(productId, variantId) {
      updateCartQuantity(productId, variantId, false);
    }
  </script>
</section>
